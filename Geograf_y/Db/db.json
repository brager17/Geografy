{
  "tables": {
    "Peoples": "create table  Peoples(\nId int primary key,\nName varchar(max))",
    "ChangeLocation": "create table ChangeLocation(\nId int Primary Key ,\nPeopleId int,\nLongitude decimal(18,8),\nLatitude decimal(18,8),\n\nDate DateTime,\nconstraint FK_LocationToPeople foreign key  (peopleId) references Peoples(Id))",
    "PeopleIntersection": "create table PeopleIntersection\n(\nId int,\nChangeLocationId1 int,\nChangeLocationId2 int,\nDistance decimal(18,8),\nDate DateTime,\nconstraint FK_ChangeLocationId1_ChangeLocation foreign key (ChangeLocationId1) references ChangeLocation(Id),\nconstraint FK_ChangeLocationId2_ChangeLocation foreign key (ChangeLocationId2) references ChangeLocation(Id)\n)"
  },
  "triggers": {
    "ChangeLocation_Insert": "CREATE OR ALTER   TRIGGER [dbo].[UpdateLocationIntersection]\non [dbo].[ChangeLocation]\nAFTER Insert\nas\n\tDECLARE @MyLongutude decimal(18,8)\n\tDECLARE @MyLatitude decimal(18,8)\n\tDECLARE @MyLocationId decimal(18,8)\n\tSET @MyLongutude = (select top(1) Longitude from  inserted)\n\tSET @MyLatitude = (select top(1) Latitude from  inserted)\n\tSET @MyLocationId = (select top(1) Id from  inserted)\n\t\n\tDELETE FROM PeopleIntersection WHERE ChangeLocationId1 =@MyLocationId or ChangeLocationId2 = @MyLocationId\n\tINSERT INTO PeopleIntersection (ChangeLocationId1,ChangeLocationId2,Distance,Date)\n\tSELECT @MyLocationId,Id,dbo.GetDistance(@MyLongutude, @MyLatitude,Longitude,Latitude),GetDate()  FROM ChangeLocation \n\tWHERE Id<>@MyLocationId and dbo.GetDistance(@MyLongutude, @MyLatitude,Longitude,Latitude) < 100\n\t\n\n"
  },
  "functions": {
    "GetDistance": "CREATE OR ALTER FUNCTION GetDistance (@longitude1 decimal(18,8), @latitude1 decimal(18,8), @longitude2 decimal(18,8), @latitude2 decimal(18,8))\nRETURNS decimal(18,8)\nas\nbegin\nDECLARE @g geography;  \nDECLARE @h geography;  \n\tSET @g = geography::STGeomFromText('POINT('+cast(@latitude1 as varchar)+' '+cast(@longitude1 as varchar)+')', 4604);  \n\tSET @h = geography::STGeomFromText('POINT('+cast(@latitude2 as varchar)+' '+cast(@longitude2 as varchar)+')', 4604);  \n\tRETURN  @g.STDistance(@h);\nEND"
  }
}